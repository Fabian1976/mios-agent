#!/usr/bin/python

import os, sys, shutil
import time
import zipfile
import socket

ARCH_DIRS = ['/oradata/fulfil/arch', '/oradata/scifull/arch']
LOCK_FILE = '/tmp/.backup_archives'

# TIMEOUT = Specify number of minutes the archive has to be old before being backup to 2nd archive log
TIMEOUT   = 30
# ZIP = yes  This will not copy/move but write archive logfile as zipped filed to secondary filesystem. This will save a lot of space in snapshots
ZIP       = "yes"
MIOS_AGENT   = "localhost:10052"
ZABBIX_KEY   = ['oracle.backup_archives[fulfil]', 'oracle.backup_archives[scifull]']

now = time.time()

def vlog(message):
    datestamp = time.strftime("[%Y/%m/%d %H:%M:%S] ", time.localtime())
    print datestamp + str(message)


# Check if there is an instance running
if os.path.exists(LOCK_FILE):
    vlog("Previous script still running")
    sys.exit(0)


def send_data_to_zabbix(key, value):
    server, port = MIOS_AGENT.split(':')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((server, int(port)))
    s.send("MIOSactive_check\0%s\0%d" % (key, value))
    s.close()

f = open(LOCK_FILE, "w")
f.close()
    
for i, dir in enumerate(ARCH_DIRS):
    vlog("Processing archives in " + dir + " key: " + ZABBIX_KEY[i])
    archives = 0   
    for file in os.listdir(dir):
        fullpath = dir + "/" + file
        newpath =  dir + "_backup/" + file
        if file[-4::] == ".arc":
            statinfo = os.stat(fullpath)
            if now - statinfo.st_mtime < (TIMEOUT * 60):
                vlog(fullpath + " to new to backup, skip")
            else:
                try:
                    if ZIP == "yes":
                        zfile = zipfile.ZipFile(newpath + ".zip", "w")
                        zfile.write(fullpath, os.path.basename(fullpath), zipfile.ZIP_DEFLATED)
                        os.remove(fullpath)
                        archives += 1
                        vlog("Successfully zipped and moved %s to %s" % (fullpath, newpath + ".zip"))
                    else:
                        shutil.move(fullpath, newpath)
                        archives += 1
                        vlog("Successfully moved %s to %s" % (fullpath, newpath))
                except OSError:
                    vlog("Error during move file: " + fullpath + " to " + newpath)
        else:
            vlog("skip file: " + file)
    try:
    	send_data_to_zabbix(ZABBIX_KEY[i], archives)
    except:
	pass
    
os.remove(LOCK_FILE)
    
